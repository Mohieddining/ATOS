name: Clang

on: [pull_request]

jobs:
    build:
        uses: ./.github/workflows/build.yaml

    file-changes:
      runs-on: ubuntu-latest
      outputs: 
        all: ${{ steps.changed-files.outputs.all }}
        existing: ${{ steps.existing-files.outputs.all }}
        target: ${{ steps.existing-files.outputs.all }}
      steps:
        - name: Check out repository
          uses: actions/checkout@v3
          with:
            submodules: recursive

        - name: Get changed files
          id: changed-files
          uses: jitterbit/get-changed-files@v1

        - name: Get only existing files
          id: existing-files
          run: |
            echo $PWD
            ls
            input_files=(${{ steps.changed-files.outputs.all }})
            found_files=()
            for f in "${input_files[@]}"; do
              file="$PWD/$f"
              echo "Checking file: $file"
              if [[ -f $file ]]; then
                echo "File exists: $file"
                found_files+=("$file")
              else
                echo "File does not exist: $file"
              fi
            done
            echo "Found files: $found_files"
          shell: bash

        # - name: Get only cpp, hpp, c, and h files
        #   id: target-files
        #   run: |
        #     echo "::set-output name=all::$(echo "${{ steps.existing-files.outputs.all }}" | xargs -I {} echo {} | grep -E '\.cpp|\.hpp|\.c|\.h' | tr '\n' ' ')"
          
        # - name: Print all files
        #   run: |
        #     echo ${{ steps.target-files.outputs.all }}

    clang-tidy:
        uses: ./.github/workflows/clang-tidy.yaml
        needs: [build, file-changes]
        with:
            target_files: ${{ needs.file-changes.outputs.target }}
    
    clang-format:
        uses: ./.github/workflows/clang-format.yaml
        needs: [file-changes]
        with:
            target_files: ${{ needs.file-changes.outputs.target }}
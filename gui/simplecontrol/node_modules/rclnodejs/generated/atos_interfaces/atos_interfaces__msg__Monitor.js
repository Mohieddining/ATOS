// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('ref-napi');
const StructType = require('ref-struct-di')(ref);
const ArrayType = require('ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const ATOSHeaderWrapper = require('../../generated/atos_interfaces/atos_interfaces__msg__ATOSHeader.js');
const PoseStampedWrapper = require('../../generated/geometry_msgs/geometry_msgs__msg__PoseStamped.js');
const TwistStampedWrapper = require('../../generated/geometry_msgs/geometry_msgs__msg__TwistStamped.js');
const AccelStampedWrapper = require('../../generated/geometry_msgs/geometry_msgs__msg__AccelStamped.js');
const ObjectDriveDirectionWrapper = require('../../generated/atos_interfaces/atos_interfaces__msg__ObjectDriveDirection.js');
const ReadyToArmWrapper = require('../../generated/atos_interfaces/atos_interfaces__msg__ReadyToArm.js');
const ObjectErrorTypeWrapper = require('../../generated/atos_interfaces/atos_interfaces__msg__ObjectErrorType.js');
const ObjectStateWrapper = require('../../generated/atos_interfaces/atos_interfaces__msg__ObjectState.js');
const MonitorRefStruct = StructType({
  atos_header: ATOSHeaderWrapper.refObjectType,
  pose: PoseStampedWrapper.refObjectType,
  velocity: TwistStampedWrapper.refObjectType,
  acceleration: AccelStampedWrapper.refObjectType,
  drive_direction: ObjectDriveDirectionWrapper.refObjectType,
  ready_to_arm: ReadyToArmWrapper.refObjectType,
  error_status: ObjectErrorTypeWrapper.refObjectType,
  object_state: ObjectStateWrapper.refObjectType,
});
const MonitorRefArray = ArrayType(MonitorRefStruct);
const MonitorRefStructArray = StructType({
  data: MonitorRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class MonitorWrapper {
  constructor(other) {
    this._wrapperFields = {};
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new MonitorRefStruct(other._refObject.toObject());
      this._wrapperFields.atos_header =  new ATOSHeaderWrapper(other._wrapperFields.atos_header);
      this._wrapperFields.pose =  new PoseStampedWrapper(other._wrapperFields.pose);
      this._wrapperFields.velocity =  new TwistStampedWrapper(other._wrapperFields.velocity);
      this._wrapperFields.acceleration =  new AccelStampedWrapper(other._wrapperFields.acceleration);
      this._wrapperFields.drive_direction =  new ObjectDriveDirectionWrapper(other._wrapperFields.drive_direction);
      this._wrapperFields.ready_to_arm =  new ReadyToArmWrapper(other._wrapperFields.ready_to_arm);
      this._wrapperFields.error_status =  new ObjectErrorTypeWrapper(other._wrapperFields.error_status);
      this._wrapperFields.object_state =  new ObjectStateWrapper(other._wrapperFields.object_state);
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new MonitorRefStruct();
    this._wrapperFields.atos_header = new ATOSHeaderWrapper();
    this._wrapperFields.pose = new PoseStampedWrapper();
    this._wrapperFields.velocity = new TwistStampedWrapper();
    this._wrapperFields.acceleration = new AccelStampedWrapper();
    this._wrapperFields.drive_direction = new ObjectDriveDirectionWrapper();
    this._wrapperFields.ready_to_arm = new ReadyToArmWrapper();
    this._wrapperFields.error_status = new ObjectErrorTypeWrapper();
    this._wrapperFields.object_state = new ObjectStateWrapper();
  }
  static createFromRefObject(refObject) {
    let self = new MonitorWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new MonitorArrayWrapper;
  }
  static get ArrayType() {
    return MonitorArrayWrapper;
  }
  static get refObjectArrayType() {
    return MonitorRefStructArray
  }
  static get refObjectType() {
    return MonitorRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
    if (checkConsistency) {
    }
    this._wrapperFields.atos_header.freeze(own, checkConsistency);
    this._refObject.atos_header = this._wrapperFields.atos_header.refObject;
    this._wrapperFields.pose.freeze(own, checkConsistency);
    this._refObject.pose = this._wrapperFields.pose.refObject;
    this._wrapperFields.velocity.freeze(own, checkConsistency);
    this._refObject.velocity = this._wrapperFields.velocity.refObject;
    this._wrapperFields.acceleration.freeze(own, checkConsistency);
    this._refObject.acceleration = this._wrapperFields.acceleration.refObject;
    this._wrapperFields.drive_direction.freeze(own, checkConsistency);
    this._refObject.drive_direction = this._wrapperFields.drive_direction.refObject;
    this._wrapperFields.ready_to_arm.freeze(own, checkConsistency);
    this._refObject.ready_to_arm = this._wrapperFields.ready_to_arm.refObject;
    this._wrapperFields.error_status.freeze(own, checkConsistency);
    this._refObject.error_status = this._wrapperFields.error_status.refObject;
    this._wrapperFields.object_state.freeze(own, checkConsistency);
    this._refObject.object_state = this._wrapperFields.object_state.refObject;
  }
  serialize() {
    this.freeze(false, true);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._wrapperFields.atos_header.copyRefObject(refObject.atos_header);
    this._wrapperFields.pose.copyRefObject(refObject.pose);
    this._wrapperFields.velocity.copyRefObject(refObject.velocity);
    this._wrapperFields.acceleration.copyRefObject(refObject.acceleration);
    this._wrapperFields.drive_direction.copyRefObject(refObject.drive_direction);
    this._wrapperFields.ready_to_arm.copyRefObject(refObject.ready_to_arm);
    this._wrapperFields.error_status.copyRefObject(refObject.error_status);
    this._wrapperFields.object_state.copyRefObject(refObject.object_state);
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
    ATOSHeaderWrapper.freeStruct(refObject.atos_header);
    PoseStampedWrapper.freeStruct(refObject.pose);
    TwistStampedWrapper.freeStruct(refObject.velocity);
    AccelStampedWrapper.freeStruct(refObject.acceleration);
    ObjectDriveDirectionWrapper.freeStruct(refObject.drive_direction);
    ReadyToArmWrapper.freeStruct(refObject.ready_to_arm);
    ObjectErrorTypeWrapper.freeStruct(refObject.error_status);
    ObjectStateWrapper.freeStruct(refObject.object_state);
  }
  static destoryRawROS(msg) {
    MonitorWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'atos_interfaces', subFolder: 'msg', interfaceName: 'Monitor'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get atos_header() {
    return this._wrapperFields.atos_header;
  }
  set atos_header(value) {
    if (value instanceof ATOSHeaderWrapper) {
      this._wrapperFields.atos_header.copy(value);
    } else {
      this._wrapperFields.atos_header.copy(new ATOSHeaderWrapper(value));
    }
  }
  get pose() {
    return this._wrapperFields.pose;
  }
  set pose(value) {
    if (value instanceof PoseStampedWrapper) {
      this._wrapperFields.pose.copy(value);
    } else {
      this._wrapperFields.pose.copy(new PoseStampedWrapper(value));
    }
  }
  get velocity() {
    return this._wrapperFields.velocity;
  }
  set velocity(value) {
    if (value instanceof TwistStampedWrapper) {
      this._wrapperFields.velocity.copy(value);
    } else {
      this._wrapperFields.velocity.copy(new TwistStampedWrapper(value));
    }
  }
  get acceleration() {
    return this._wrapperFields.acceleration;
  }
  set acceleration(value) {
    if (value instanceof AccelStampedWrapper) {
      this._wrapperFields.acceleration.copy(value);
    } else {
      this._wrapperFields.acceleration.copy(new AccelStampedWrapper(value));
    }
  }
  get drive_direction() {
    return this._wrapperFields.drive_direction;
  }
  set drive_direction(value) {
    if (value instanceof ObjectDriveDirectionWrapper) {
      this._wrapperFields.drive_direction.copy(value);
    } else {
      this._wrapperFields.drive_direction.copy(new ObjectDriveDirectionWrapper(value));
    }
  }
  get ready_to_arm() {
    return this._wrapperFields.ready_to_arm;
  }
  set ready_to_arm(value) {
    if (value instanceof ReadyToArmWrapper) {
      this._wrapperFields.ready_to_arm.copy(value);
    } else {
      this._wrapperFields.ready_to_arm.copy(new ReadyToArmWrapper(value));
    }
  }
  get error_status() {
    return this._wrapperFields.error_status;
  }
  set error_status(value) {
    if (value instanceof ObjectErrorTypeWrapper) {
      this._wrapperFields.error_status.copy(value);
    } else {
      this._wrapperFields.error_status.copy(new ObjectErrorTypeWrapper(value));
    }
  }
  get object_state() {
    return this._wrapperFields.object_state;
  }
  set object_state(value) {
    if (value instanceof ObjectStateWrapper) {
      this._wrapperFields.object_state.copy(value);
    } else {
      this._wrapperFields.object_state.copy(new ObjectStateWrapper(value));
    }
  }
  copyRefObject(refObject) {
    this._refObject = new MonitorRefStruct(refObject.toObject());
    this._wrapperFields.atos_header.copyRefObject(this._refObject.atos_header);
    this._wrapperFields.pose.copyRefObject(this._refObject.pose);
    this._wrapperFields.velocity.copyRefObject(this._refObject.velocity);
    this._wrapperFields.acceleration.copyRefObject(this._refObject.acceleration);
    this._wrapperFields.drive_direction.copyRefObject(this._refObject.drive_direction);
    this._wrapperFields.ready_to_arm.copyRefObject(this._refObject.ready_to_arm);
    this._wrapperFields.error_status.copyRefObject(this._refObject.error_status);
    this._wrapperFields.object_state.copyRefObject(this._refObject.object_state);
  }
  copy(other) {
    this._refObject = new MonitorRefStruct(other._refObject.toObject());
    this._wrapperFields.atos_header.copy(other._wrapperFields.atos_header);
    this._wrapperFields.pose.copy(other._wrapperFields.pose);
    this._wrapperFields.velocity.copy(other._wrapperFields.velocity);
    this._wrapperFields.acceleration.copy(other._wrapperFields.acceleration);
    this._wrapperFields.drive_direction.copy(other._wrapperFields.drive_direction);
    this._wrapperFields.ready_to_arm.copy(other._wrapperFields.ready_to_arm);
    this._wrapperFields.error_status.copy(other._wrapperFields.error_status);
    this._wrapperFields.object_state.copy(other._wrapperFields.object_state);
  }
  static get classType() {
    return MonitorWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"atos_header","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"atos_interfaces","type":"ATOSHeader","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"pose","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"geometry_msgs","type":"PoseStamped","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"velocity","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"geometry_msgs","type":"TwistStamped","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"acceleration","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"geometry_msgs","type":"AccelStamped","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"drive_direction","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"atos_interfaces","type":"ObjectDriveDirection","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"ready_to_arm","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"atos_interfaces","type":"ReadyToArm","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"error_status","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"atos_interfaces","type":"ObjectErrorType","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"object_state","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"atos_interfaces","type":"ObjectState","stringUpperBound":null,"isPrimitiveType":false},"default_value":null}],"baseType":{"pkgName":"atos_interfaces","type":"Monitor","stringUpperBound":null,"isPrimitiveType":false},"msgName":"Monitor"};
  }
  hasMember(name) {
    let memberNames = ["atos_header","pose","velocity","acceleration","drive_direction","ready_to_arm","error_status","object_state"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class MonitorArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof MonitorWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new MonitorWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to MonitorArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to MonitorArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new MonitorRefArray(size);
    this._refObject = new MonitorRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new MonitorWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof MonitorArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "MonitorArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      MonitorWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return MonitorWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return MonitorArrayWrapper;
  }
}
module.exports = MonitorWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "atos_header",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "atos_interfaces",
        "type": "ATOSHeader",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "pose",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "geometry_msgs",
        "type": "PoseStamped",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "velocity",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "geometry_msgs",
        "type": "TwistStamped",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "acceleration",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "geometry_msgs",
        "type": "AccelStamped",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "drive_direction",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "atos_interfaces",
        "type": "ObjectDriveDirection",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "ready_to_arm",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "atos_interfaces",
        "type": "ReadyToArm",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "error_status",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "atos_interfaces",
        "type": "ObjectErrorType",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "object_state",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "atos_interfaces",
        "type": "ObjectState",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "atos_interfaces",
    "type": "Monitor",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "Monitor"
}
*/
